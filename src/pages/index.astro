---
import Layout from '@/app.astro'
import Icon from '@/components/Icon.astro'
import Text from '@/components/Text.astro'
import Link from '@/components/Link.astro'
import Image from '@/components/Image.astro'
import Container from '@/components/Container.astro'
import { getPgMainContent } from '@/services/contentful'

const {
  actions,
  asideImage,
  currentlyLearning,
  description: aboutMe,
  headDescription: description,
  headLang: lang,
  headThemeColor: themeColor,
  headTitle: title,
  slug,
  socials,
} = await getPgMainContent()

const { fields: asidePicture } = asideImage
const asidePictureSource = `https:${asidePicture.source.fields.file.url}`

function getSeparationSymbol(arryaLength: number, index: number) {
  return index < arryaLength - 2 ? ', ' : index === arryaLength - 2 ? ' & ' : ''
}
---

<Layout {lang} {title} {description} {themeColor} {slug}>
  <Container unlimited as="main">
    <section class="lg:overflow-hidden">
      <div
        class="relative mx-auto flex max-h-[60rem] max-w-6xl grid-cols-3 flex-col gap-8 gap-y-16 px-4 py-16 md:px-8 lg:grid lg:h-screen lg:pt-40 xl:pt-64"
      >
        <section class="col-span-2 lg:pb-24">
          <article>
            <header>
              <Text as="h1" class="font-primary text-title max-w-[36rem] font-semibold text-balance lg:max-w-none">
                <Text featured as="strong">Erick Vargas</Text> Frontend developer.
              </Text>
            </header>
            {
              actions && (
                <footer class="mt-6 flex flex-wrap gap-4 md:gap-8">
                  {actions.map(({ fields: { asButton, external, featured, href, label } }) => (
                    <Link {featured} {external} btn={asButton} to={href}>
                      {label}
                    </Link>
                  ))}
                </footer>
              )
            }
          </article>

          <Container
            unlimited
            as="article"
            class="font-secondary w-full max-w-2xl pt-10 text-xl tracking-wide text-balance text-gray-300 lg:absolute lg:bottom-16 lg:left-8"
          >
            {
              aboutMe?.map(({ fields: { featured, label, tag } }) => (
                <Text {featured} as={tag}>
                  {label}
                </Text>
              ))
            }
            {
              currentlyLearning && (
                <Text>
                  I am currently learning{' '}
                  {currentlyLearning.map(({ fields: { asButton, external, featured, href, label } }, index) => (
                    <>
                      <Link {featured} {external} btn={asButton} to={href}>
                        {label}
                      </Link>
                      {getSeparationSymbol(currentlyLearning.length, index)}
                    </>
                  ))}
                </Text>
              )
            }
          </Container>
        </section>
        <section class="relative md:h-[420px]">
          <div
            class="hidden h-full w-full min-w-[460px] flex-col gap-4 sm:min-w-[660px] lg:absolute lg:top-64 lg:block lg:min-w-[1150px]"
          >
            <div class="flex">
              {
                socials && (
                  <section class="relative z-10 grid content-start gap-y-8 pt-32 pr-4 *:text-gray-300">
                    {socials.map(({ fields: { external, href, iconName, label } }) => (
                      <Link {external} to={href} title={label}>
                        {iconName && (
                          <Icon
                            size={32}
                            name={iconName}
                            class="relative transition-[scale] duration-300 ease-in-out hover:scale-125"
                          />
                        )}
                      </Link>
                    ))}
                  </section>
                )
              }
              {
                asideImage && (
                  <aside>
                    <Image
                      width={444}
                      height={440}
                      src="/images/green-glow.webp"
                      class="absolute inset-0 -top-full h-[820px] w-full"
                      alt={`Green glow that serves as an areola for the '${asidePicture.alt}' image`}
                    />
                    <Image
                      alt={asidePicture.alt}
                      src={asidePictureSource}
                      width={asidePicture.width}
                      height={asidePicture.height}
                      class="relative h-full w-full"
                    />
                  </aside>
                )
              }
            </div>
          </div>
        </section>
      </div>
    </section>
  </Container>
</Layout>

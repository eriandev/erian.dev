---
import Text from '@/components/Text.astro'
import Link from '@/components/Link.astro'
import Image from '@/components/Image.astro'
import { PROTOCOL } from '@/utils/consts.ts'
import JobCard from '@/components/JobCard.astro'
import JobCardDetailed from '@/components/JobCardDetailed.astro'
import { IdSection, type MyExperienceProps } from '@/components/sections/types.ts'

interface Props extends MyExperienceProps {
  orderNumber: number
}

const { title, description, featuredItems, orderNumber, additional } = Astro.props
const orderNumberParsed = orderNumber.toString().padStart(2, '0') + '/'
const { as: titleTag, ...titleProps } = title.props
---

<section class="relative px-4 py-16 md:px-8 lg:mx-auto lg:grid lg:grid-cols-2 lg:gap-x-16 lg:py-32">
  <div>
    <article class="sticky top-16 flex flex-col gap-y-4">
      <hgroup>
        <Text as="span" class="font-primary text-lg font-semibold text-white xl:absolute xl:-left-18">
          {orderNumberParsed}
        </Text>
        <Text as={titleTag} {...titleProps} class="font-primary text-5xl font-semibold">
          {
            title.parsed.map(({ featured, text }) =>
              featured ? (
                <Text featured as="strong" class="pl-4">
                  {text}
                </Text>
              ) : (
                text
              ),
            )
          }
        </Text>
      </hgroup>
      <div class="grid gap-y-1">
        {
          description.map(({ parsed, props: { as, ...descriptionProps } }) => (
            <Text {as} {...descriptionProps} class="font-primary text-base font-medium tracking-wide text-gray-400">
              {parsed.map(({ featured, text }) =>
                featured ? (
                  <Text as="strong" class="inline-block text-gray-200">
                    {text}
                  </Text>
                ) : (
                  text
                ),
              )}
            </Text>
          ))
        }
      </div>
      {
        featuredItems && featuredItems.length > 0 && (
          <div class="flex flex-wrap gap-4 lg:grid lg:max-w-xl lg:grid-cols-[repeat(3,fit-content(100%))]">
            {featuredItems.map(({ link, image }) => (
              <Link {...link}>
                {image && (
                  <Image
                    {...image}
                    src={PROTOCOL + image.src}
                    class="drop-shine badge-transition size-24 hover:scale-110 lg:size-32"
                  />
                )}
              </Link>
            ))}
          </div>
        )
      }
    </article>
  </div>

  {
    additional && additional.identifier === IdSection.MY_EXPERIENCE && (
      <div class="grid gap-y-14 pt-14 lg:pt-0">
        {additional.data.map(({ jobs, year }) => (
          <div class="grid gap-y-3 text-sm">
            <Text as="span" class="font-secondary text-lg font-semibold">
              {year}
            </Text>
            <div class="grid gap-y-5">
              {jobs.map((job) => (
                <JobCard {...job} />
              ))}
            </div>
          </div>
        ))}
      </div>
    )
  }

  {
    additional && additional.identifier === IdSection.MY_EXPERIENCE_DETAILED && (
      <div class="grid gap-y-10 pt-14 lg:pt-0">
        {additional.data.map((job) => (
          <JobCardDetailed {...job} />
        ))}
      </div>
    )
  }
</section>
